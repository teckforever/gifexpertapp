{"version":3,"sources":["components/AddCategory.js","components/GifFridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","console","log","length","preventDefault","trim","cats","type","value","onChange","target","GifFridItem","title","url","className","src","alt","getGifs","category","a","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAsB9C,OACI,sBAAMC,SAfW,SAACC,GAElBC,QAAQC,IAAIL,EAAWM,QAEvBH,EAAEI,iBAEEP,EAAWQ,OAAOF,OAAS,IAC3BR,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAOlB,SACI,uBAAOS,KAAK,OAAOC,MAAOX,EAAYY,SApBpB,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,QCPlBG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEjC,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCJHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAGH,mCAEVN,EALa,uDAGH,mCAHG,cAKsDK,EALtD,sBAOAE,MAAMP,GAPN,cAObQ,EAPa,gBASIA,EAAKC,OATT,uBASXC,EATW,EASXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAKa,EAAIE,OAAOC,iBAAiBhB,QAftB,kBAmBZW,GAnBY,4CAAH,sDCCPM,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAa,MAGZtB,mBAAS,CAAE2B,KAAM,GAAIQ,SAAS,IAHlB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAyBtC,OAnBAC,qBAAU,WAENjB,EAAQC,GAAUiB,MAAK,SAAAC,GAEnBC,YAAW,WACPJ,EACI,CACIV,KAAMa,EACNL,SAAS,MAIlB,UAIR,CAACb,IAGGc,EDvB2BM,CAAapB,GAAjCU,EAFuB,EAE7BL,KAAcQ,EAFe,EAEfA,QAEtB,OACI,qCACI,mCAAMb,KAELa,GAAW,2CAEZ,qBAAMjB,UAAU,YAAhB,SAEQc,EAAOH,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEbjCY,EAAe,WAAM,MAGM3C,mBAAS,CAAC,cAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAK9B,OACI,gCACI,8CAGA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ6C,EAAWf,KAAI,SAAAP,GACX,OACI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCjB1CuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.60fb72f7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        console.log(inputValue.length)\r\n\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifFridItem = ({ title, url }) => {\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n//FUNCION QUE VA AL SERVIDOR Y TRAE LOS DATOS, RETORNA LAS IMAGENES EN UNA FUNCION ASINCRONA\r\n\r\nexport const getGifs = async (category) => {\r\n   \r\n\r\n    const api_key = 'MkU9zPFlOKrakE34yckBUmgRJ51UInx9'\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${category}&limit=10`\r\n\r\n    const resp = await fetch(url)\r\n\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\nimport { GifFridItem } from './GifFridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n            <h3> {category}</h3>\r\n\r\n            {loading && <p>Cargando..</p>}\r\n\r\n            < div className=\"card-grid\" >\r\n                {\r\n                    images.map((img) => (\r\n                        <GifFridItem key={img.id} {...img} />\r\n                    ))\r\n                }\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    //STATE HOOK USEFETCHGIFS\r\n    const [state, setstate] = useState({ data: [], loading: true })\r\n\r\n    /* PARA QUE SOLO SE EJECUTE UNA VEZ */\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then(imgs => {\r\n\r\n            setTimeout(() => {\r\n                setstate(\r\n                    {\r\n                        data: imgs,\r\n                        loading: false\r\n                    }\r\n                )\r\n\r\n            }, 500);\r\n\r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    /* ESTADO APP CATEGORIA POR DEFECTO*/\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            {/* COMP INPUT */}\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            {/* MAPEO DE CATEGORIAS Y COMP GIFGRID PARA CONTENER EL RESULTADO DE LA BUSQUEDA*/}\r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                        return (\r\n                            <GifGrid key={category} category={category} />\r\n                        )\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp.js';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}